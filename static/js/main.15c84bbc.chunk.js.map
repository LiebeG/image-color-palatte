{"version":3,"sources":["components/PickerMMCQ/index.js","components/PickerMMCQ/quantize.js","components/PickerMMCQ/core.js","components/MyHeader/index.js","components/Title/index.js","components/ImgUploadBox/iconUpload.js","components/ImgUploadBox/index.js","components/Button/index.js","components/ColorBox/Swatch.js","components/ColorBox/index.js","components/InfoBox/index.js","utils/imageUtils.js","components/PickerMCQ/index.js","components/PickerKMC/utils.js","components/PickerKMC/index.js","components/PickerMKMC/utils.js","components/PickerMKMC/index.js","components/PickerOctree/index.js","components/PickerUniform/index.js","containers/ColorPickerPage/index.js","containers/AboutPage/index.js","App.js","serviceWorker.js","index.js"],"names":["quantize","require","core","CanvasImage","image","this","canvas","document","createElement","context","getContext","width","height","drawImage","prototype","getImageData","ColorThief","getColor","sourceImage","quality","palette","getPaletteByImg","dominantColor","console","log","getSwatch","imgData","processInfo","time","start","performance","now","getPalette","end","mc","slice","info","colorCount","options","validateOptions","pixelCount","pixelArray","createPixelArray","data","cmap","imageData","getColorFromUrl","imageUrl","callback","addEventListener","src","xhr","XMLHttpRequest","open","responseType","onload","status","uInt8Array","Uint8Array","response","i","length","binaryString","Array","String","fromCharCode","join","base64","window","btoa","send","getColorAsync","thief","module","exports","pv","map","array","f","o","d","index","call","naturalOrder","a","b","sum","reduce","p","max","Math","apply","getColorIndex","r","g","PQueue","comparator","contents","sorted","sort","push","peek","undefined","pop","size","debug","VBox","r1","r2","g1","g2","b1","b2","histo","CMap","vboxes","vbox","count","volume","medianCutApply","rw","gw","bw","maxw","copy","j","k","total","partialsum","lookaheadsum","forEach","doCut","color","left","right","vbox1","vbox2","d2","dim1","dim2","count2","min","force","_volume","_count_set","npix","_count","avg","_avg","hval","ntot","rsum","gsum","bsum","contains","pixel","rval","gval","bval","vb","nearest","d1","pColor","sqrt","pow","forcebw","lowest","idx","highest","pixels","maxcolors","getHisto","rmin","rmax","gmin","gmax","bmin","bmax","vboxFromPixels","pq","iter","lh","target","ncolors","niters","pq2","offset","Number","isInteger","Error","Nav","styled","nav","MyHeader","match","useRouteMatch","className","to","url","Title","props","title","href","author","created","updated","IconUpload","xmlns","viewBox","ImgUploadBox","React","forwardRef","userImgRef","uploadRef","useRef","dropzoneRef","useState","isLoaded","setIsLoaded","setHeight","showImage","file","reader","FileReader","readAsDataURL","Image","result","current","id","ref","onDragEnter","e","preventDefault","stopPropagation","onDragOver","classList","add","onDragLeave","remove","onDrop","dataTransfer","items","alert","kind","type","getAsFile","onClick","click","style","onChange","files","test","visibility","alt","jsx","MyButton","button","Button","children","reverse","backgroundColor","SwatchDIV","div","Swatch","placeholder","FlexBox","ColorBox","mainColor","c","key","Box","InfoBox","_convertPixelsToRGB","rgbVals","y","x","_rgbObj2String","rgbObj","colors","rgbArray","buckets","swatch","orderByLuminance","getMostVariantColor","imgCanvas","rMin","POSITIVE_INFINITY","rMax","NEGATIVE_INFINITY","gMin","gMax","bMin","bMax","rRange","gRange","bRange","biggestRange","depth","maxDepth","DEFAULT_DEPTH","prev","curr","round","componentToSortBy","_findBiggestRange","p1","p2","mid","calcLuminance","v","rgbVal","percentage","factor","_adjustColor","value","_clamp","rgbToHsl","h","s","l","hslToRgb","hue2rgb","q","t","PickerKMC","K","callBack","Date","kmeansIteration","kmeansTime","top5Count","rows","cols","keys","colors_info","pixel_count","pixel_step","hsl","color_step","row","col","pindex","floor","indexOf","fre","category","pre","next","len","filter","main_color","init_seed_1","chooseSeedColors","cluster_res","kMC","cluster_res_1","rgb","tmp","toString","rgbToHex","main_color_a","Function","num","init_seed","abs","seeds","max_step","iteration_count","seed","classifyColor","hsl_count","fre_count","flag","every","ele","pre_rgb","next_rgb","classes","min_index","distance","OctreeNode","red","green","blue","isLeaf","fill","Octree","root","leafNum","reducible","parent","level","node","str","parseInt","createNode","addColor","lv","maxColors","reduceTree","buildOctree","colorsStats","_getColorIndex","cindex","Node","buildMinHeap","arr","heapify","heapSize","PickerUniform","redLevel","greenLevel","blueLevel","bucket","maxColor","rgbArry","categorize","quantizeWithMinHeap","quantizeWithoutMinHeap","rd","gd","bd","rp","gp","bp","bucketArray","cur","CenterDiv","A","ColorPickerPage","imgRef","_checkImgData","_getImageData","UQ","setUQ","KMeans","setKMeans","MKMeans","setMKMeans","MMCQ","setMMCQ","MCQ","setMCQ","setOctree","PickerWithUQ","swatchOptimized","getSwatchOptimized","desp","PickerWithKMeans","censusColors","PickerWithMKMeans","PickerMKMC","PickerWithMMCQ","PickerMMCQ","n","PickerWithMCQ","PickerMCQ","PickerWithOctree","PickerOctree","Article","Section","h2","Para","AboutPage","App","path","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15c84bbc.chunk.js","sourcesContent":["/**\n * Method: Median Cut\n * Code in this file might be modified and commented based on original code by XadillaX\n * https://github.com/lokesh/color-thief-site\n */\n/**\n * Original code declaration:\n * ---------------------------------------\n * Color Thief v2.3.0\n * by Lokesh Dhakar - http://www.lokeshdhakar.com\n *\n * Thanks\n * ------\n * Nick Rabinowitz - For creating quantize.js.\n * John Schulz - For clean up and optimization. @JFSIII\n * Nathan Spady - For adding drag and drop support to the demo page.\n *\n * License\n * -------\n * Copyright Lokesh Dhakar\n * Released under the MIT license\n * https://raw.githubusercontent.com/lokesh/color-thief/master/LICENSE\n *\n * @license\n */\nconst quantize = require(\"./quantize\");\nconst core = require(\"./core.js\");\n\n/**\n * CanvasImage Class\n * Class that wraps the html image element and canvas.\n * It also simplifies some of the canvas context manipulation\n * with a set of helper functions.\n * @param {*} image\n */\nconst CanvasImage = function(image) {\n  this.canvas = document.createElement(\"canvas\");\n  this.context = this.canvas.getContext(\"2d\");\n  this.width = this.canvas.width = image.width;\n  this.height = this.canvas.height = image.height;\n  this.context.drawImage(image, 0, 0, this.width, this.height);\n};\n\nCanvasImage.prototype.getImageData = function() {\n  return this.context.getImageData(0, 0, this.width, this.height);\n};\n\nvar ColorThief = function() {};\n\n/*\n * getColor(sourceImage[, quality])\n * returns {r: num, g: num, b: num}\n *\n * Use the median cut algorithm provided by quantize.js to cluster similar\n * colors and return the base color from the largest cluster.\n *\n * Quality is an optional argument. It needs to be an integer. 1 is the highest quality settings.\n * 10 is the default. There is a trade-off between quality and speed. The bigger the number, the\n * faster a color will be returned but the greater the likelihood that it will not be the visually\n * most dominant color.\n *\n * */\nColorThief.prototype.getColor = function(sourceImage, quality = 10) {\n  const palette = this.getPaletteByImg(sourceImage, 5, quality);\n  if (!palette) {\n    console.log(\"palette is empty, please check your image\");\n    return;\n  }\n  const dominantColor = palette[0];\n  return dominantColor;\n};\n\nColorThief.prototype.getSwatch = function(imgData, quality = 10) {\n  let processInfo = {\n    time: 0\n  };\n  const start = performance.now();\n  const palette = this.getPalette(imgData, 10, quality);\n  const end = performance.now();\n  if (!palette) {\n    console.log(\"palette is empty, please check your image\");\n    return;\n  }\n  processInfo.time = end - start;\n  return {\n    mc: palette[0],\n    palette: palette.slice(1),\n    info: processInfo\n  };\n};\n\nColorThief.prototype.getPalette = function(imgData, colorCount, quality) {\n  const options = core.validateOptions({\n    colorCount,\n    quality\n  });\n  const pixelCount = imgData.width * imgData.height;\n  const pixelArray = core.createPixelArray(\n    imgData.data,\n    pixelCount,\n    options.quality\n  );\n  // Send array to quantize function which clusters values\n  // using median cut algorithm\n  const cmap = quantize(pixelArray, options.colorCount);\n  const palette = cmap ? cmap.palette() : null;\n  return palette;\n};\n\n/*\n * getPalette(sourceImage[, colorCount, quality])\n * returns array[ {r: num, g: num, b: num}, {r: num, g: num, b: num}, ...]\n *\n * Use the median cut algorithm provided by quantize.js to cluster similar colors.\n *\n * colorCount determines the size of the palette; the number of colors returned. If not set, it\n * defaults to 10.\n *\n * quality is an optional argument. It needs to be an integer. 1 is the highest quality settings.\n * 10 is the default. There is a trade-off between quality and speed. The bigger the number, the\n * faster the palette generation but the greater the likelihood that colors will be missed.\n *\n */\nColorThief.prototype.getPaletteByImg = function(\n  sourceImage,\n  colorCount,\n  quality\n) {\n  const options = core.validateOptions({\n    colorCount,\n    quality\n  });\n\n  // Create custom CanvasImage object\n  const image = new CanvasImage(sourceImage);\n  const imageData = image.getImageData();\n  const pixelCount = image.width * image.height;\n\n  const pixelArray = core.createPixelArray(\n    imageData.data,\n    pixelCount,\n    options.quality\n  );\n\n  // Send array to quantize function which clusters values\n  // using median cut algorithm\n  const cmap = quantize(pixelArray, options.colorCount);\n  const palette = cmap ? cmap.palette() : null;\n\n  return palette;\n};\n\nColorThief.prototype.getColorFromUrl = function(imageUrl, callback, quality) {\n  const sourceImage = document.createElement(\"img\");\n\n  sourceImage.addEventListener(\"load\", () => {\n    const palette = this.getPalette(sourceImage, 5, quality);\n    const dominantColor = palette[0];\n    callback(dominantColor, imageUrl);\n  });\n  sourceImage.src = imageUrl;\n};\n\nColorThief.prototype.getImageData = function(imageUrl, callback) {\n  let xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", imageUrl, true);\n  xhr.responseType = \"arraybuffer\";\n  xhr.onload = function() {\n    if (this.status === 200) {\n      let uInt8Array = new Uint8Array(this.response);\n      let i = uInt8Array.length;\n      let binaryString = new Array(i);\n      for (let i = 0; i < uInt8Array.length; i++) {\n        binaryString[i] = String.fromCharCode(uInt8Array[i]);\n      }\n      let data = binaryString.join(\"\");\n      let base64 = window.btoa(data);\n      callback(\"data:image/png;base64,\" + base64);\n    }\n  };\n  xhr.send();\n};\n\nColorThief.prototype.getColorAsync = function(imageUrl, callback, quality) {\n  const thief = this;\n  this.getImageData(imageUrl, function(imageData) {\n    const sourceImage = document.createElement(\"img\");\n    sourceImage.addEventListener(\"load\", function() {\n      const palette = thief.getPalette(sourceImage, 5, quality);\n      const dominantColor = palette[0];\n      callback(dominantColor, this);\n    });\n    sourceImage.src = imageData;\n  });\n};\n\nmodule.exports = ColorThief;\n","/*\n * quantize.js Copyright 2008 Nick Rabinowitz\n * Ported to node.js by Olivier Lesnicki\n * Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php\n */\n// fill out a couple protovis dependencies\n\n/*\n * Block below copied from Protovis: http://mbostock.github.com/protovis/\n * Copyright 2010 Stanford Visualization Group\n * Licensed under the BSD License: http://www.opensource.org/licenses/bsd-license.php\n */\nif (!pv) {\n  var pv = {\n    map: function(array, f) {\n      var o = {};\n      return f\n        ? array.map(function(d, i) {\n            o.index = i;\n            return f.call(o, d);\n          })\n        : array.slice();\n    },\n    naturalOrder: function(a, b) {\n      return a < b ? -1 : a > b ? 1 : 0;\n    },\n    sum: function(array, f) {\n      var o = {};\n      return array.reduce(\n        f\n          ? function(p, d, i) {\n              o.index = i;\n              return p + f.call(o, d);\n            }\n          : function(p, d) {\n              return p + d;\n            },\n        0\n      );\n    },\n    max: function(array, f) {\n      return Math.max.apply(null, f ? pv.map(array, f) : array);\n    }\n  };\n}\n/**\n * Basic Javascript port of the MMCQ (modified median cut quantization)\n * algorithm from the Leptonica library (http://www.leptonica.com/).\n * Returns a color map you can use to map original pixels to the reduced\n * palette. Still a work in progress.\n * \n * @author Nick Rabinowitz\n * @example\n \n// array of pixels as [R,G,B] arrays\nvar myPixels = [[190,197,190], [202,204,200], [207,214,210], [211,214,211], [205,207,207]\n                // etc\n                ];\nvar maxColors = 4;\n \nvar cmap = MMCQ.quantize(myPixels, maxColors);\nvar newPalette = cmap.palette();\nvar newPixels = myPixels.map(function(p) { \n    return cmap.map(p); \n});\n \n */\n\nvar MMCQ = (function() {\n  // private constants\n  var sigbits = 5,\n    rshift = 8 - sigbits,\n    maxIterations = 1000,\n    fractByPopulations = 0.75; // get reduced-space color index for a pixel\n\n  function getColorIndex(r, g, b) {\n    return (r << (2 * sigbits)) + (g << sigbits) + b;\n  }\n\n  // Simple priority queue\n  function PQueue(comparator) {\n    var contents = [],\n      sorted = false;\n\n    function sort() {\n      contents.sort(comparator);\n      sorted = true;\n    }\n\n    return {\n      push: function(o) {\n        contents.push(o);\n        sorted = false;\n      },\n      peek: function(index) {\n        if (!sorted) {\n          sort();\n        }\n        if (index === undefined) {\n          index = contents.length - 1;\n        }\n        return contents[index];\n      },\n      pop: function() {\n        if (!sorted) {\n          sort();\n        }\n        return contents.pop();\n      },\n      size: function() {\n        return contents.length;\n      },\n      map: function(f) {\n        return contents.map(f);\n      },\n      debug: function() {\n        if (!sorted) {\n          sort();\n        }\n        return contents;\n      }\n    };\n  }\n\n  // VBox: 3d color space box\n  // The original median cut method partitions the color space into\n  // three-dimensional rectangular regions, that we call vboxes,\n  // with roughly equal numbers of pixels within each region\n  function VBox(r1, r2, g1, g2, b1, b2, histo) {\n    var vbox = this;\n    vbox.r1 = r1;\n    vbox.r2 = r2;\n    vbox.g1 = g1;\n    vbox.g2 = g2;\n    vbox.b1 = b1;\n    vbox.b2 = b2;\n    vbox.histo = histo;\n  }\n\n  VBox.prototype = {\n    volume: function(force) {\n      var vbox = this;\n\n      if (!vbox._volume || force) {\n        vbox._volume =\n          (vbox.r2 - vbox.r1 + 1) *\n          (vbox.g2 - vbox.g1 + 1) *\n          (vbox.b2 - vbox.b1 + 1);\n      }\n\n      return vbox._volume;\n    },\n    count: function(force) {\n      var vbox = this,\n        histo = vbox.histo;\n\n      if (!vbox._count_set || force) {\n        var npix = 0,\n          i,\n          j,\n          k,\n          index;\n\n        for (i = vbox.r1; i <= vbox.r2; i++) {\n          for (j = vbox.g1; j <= vbox.g2; j++) {\n            for (k = vbox.b1; k <= vbox.b2; k++) {\n              index = getColorIndex(i, j, k);\n              npix += histo[index] || 0;\n            }\n          }\n        }\n\n        vbox._count = npix;\n        vbox._count_set = true;\n      }\n\n      return vbox._count;\n    },\n    copy: function() {\n      var vbox = this;\n      return new VBox(\n        vbox.r1,\n        vbox.r2,\n        vbox.g1,\n        vbox.g2,\n        vbox.b1,\n        vbox.b2,\n        vbox.histo\n      );\n    },\n    avg: function(force) {\n      var vbox = this,\n        histo = vbox.histo;\n\n      if (!vbox._avg || force) {\n        var ntot = 0,\n          mult = 1 << (8 - sigbits),\n          rsum = 0,\n          gsum = 0,\n          bsum = 0,\n          hval,\n          i,\n          j,\n          k,\n          histoindex;\n\n        for (i = vbox.r1; i <= vbox.r2; i++) {\n          for (j = vbox.g1; j <= vbox.g2; j++) {\n            for (k = vbox.b1; k <= vbox.b2; k++) {\n              histoindex = getColorIndex(i, j, k);\n              hval = histo[histoindex] || 0;\n              ntot += hval;\n              rsum += hval * (i + 0.5) * mult;\n              gsum += hval * (j + 0.5) * mult;\n              bsum += hval * (k + 0.5) * mult;\n            }\n          }\n        }\n\n        if (ntot) {\n          vbox._avg = [~~(rsum / ntot), ~~(gsum / ntot), ~~(bsum / ntot)];\n        } else {\n          //console.log('empty box');\n          vbox._avg = [\n            ~~((mult * (vbox.r1 + vbox.r2 + 1)) / 2),\n            ~~((mult * (vbox.g1 + vbox.g2 + 1)) / 2),\n            ~~((mult * (vbox.b1 + vbox.b2 + 1)) / 2)\n          ];\n        }\n      }\n\n      return vbox._avg;\n    },\n    contains: function(pixel) {\n      var vbox = this,\n        rval = pixel[0] >> rshift;\n      let gval = pixel[1] >> rshift;\n      let bval = pixel[2] >> rshift;\n      return (\n        rval >= vbox.r1 &&\n        rval <= vbox.r2 &&\n        gval >= vbox.g1 &&\n        gval <= vbox.g2 &&\n        bval >= vbox.b1 &&\n        bval <= vbox.b2\n      );\n    }\n  };\n\n  // Color map\n  function CMap() {\n    this.vboxes = new PQueue(function(a, b) {\n      return pv.naturalOrder(\n        a.vbox.count() * a.vbox.volume(),\n        b.vbox.count() * b.vbox.volume()\n      );\n    });\n  }\n\n  CMap.prototype = {\n    push: function(vbox) {\n      this.vboxes.push({\n        vbox: vbox,\n        color: vbox.avg()\n      });\n    },\n    palette: function() {\n      return this.vboxes.map(function(vb) {\n        return vb.color;\n      });\n    },\n    size: function() {\n      return this.vboxes.size();\n    },\n    map: function(color) {\n      var vboxes = this.vboxes;\n\n      for (var i = 0; i < vboxes.size(); i++) {\n        if (vboxes.peek(i).vbox.contains(color)) {\n          return vboxes.peek(i).color;\n        }\n      }\n\n      return this.nearest(color);\n    },\n    nearest: function(color) {\n      var vboxes = this.vboxes,\n        d1,\n        d2,\n        pColor;\n\n      for (var i = 0; i < vboxes.size(); i++) {\n        d2 = Math.sqrt(\n          Math.pow(color[0] - vboxes.peek(i).color[0], 2) +\n            Math.pow(color[1] - vboxes.peek(i).color[1], 2) +\n            Math.pow(color[2] - vboxes.peek(i).color[2], 2)\n        );\n\n        if (d2 < d1 || d1 === undefined) {\n          d1 = d2;\n          pColor = vboxes.peek(i).color;\n        }\n      }\n\n      return pColor;\n    },\n    forcebw: function() {\n      // XXX: won't  work yet\n      var vboxes = this.vboxes;\n      vboxes.sort(function(a, b) {\n        return pv.naturalOrder(pv.sum(a.color), pv.sum(b.color));\n      }); // force darkest color to black if everything < 5\n\n      var lowest = vboxes[0].color;\n      if (lowest[0] < 5 && lowest[1] < 5 && lowest[2] < 5) {\n        vboxes[0].color = [0, 0, 0];\n      } // force lightest color to white if everything > 251\n\n      var idx = vboxes.length - 1,\n        highest = vboxes[idx].color;\n      if (highest[0] > 251 && highest[1] > 251 && highest[2] > 251) {\n        vboxes[idx].color = [255, 255, 255];\n      }\n    }\n  };\n\n  // histo (1-d array, giving the number of pixels in\n  // each quantized region of color space), or null on error\n  function getHisto(pixels) {\n    var histosize = 1 << (3 * sigbits),\n      histo = new Array(histosize),\n      index,\n      rval,\n      gval,\n      bval;\n    // 这里其实就是降低颜色的总数量，rshift = 3\n    // 相当于 pixel[n]/8, 颜色从 16m -> 32k (因为每一个颜色通量都/8 = 16m/2^(3*3))\n    pixels.forEach(function(pixel) {\n      rval = pixel[0] >> rshift;\n      gval = pixel[1] >> rshift;\n      bval = pixel[2] >> rshift;\n      index = getColorIndex(rval, gval, bval);\n      histo[index] = (histo[index] || 0) + 1;\n    });\n    return histo;\n  }\n\n  function vboxFromPixels(pixels, histo) {\n    // prettier-ignore\n    var rmin = 1000000, rmax = 0, gmin = 1000000, gmax = 0,\n      bmin = 1000000, bmax = 0,\n      rval, gval, bval;\n\n    // find min/max // 获取rgb三原色的最大值和最小值\n    pixels.forEach(function(pixel) {\n      rval = pixel[0] >> rshift;\n      gval = pixel[1] >> rshift;\n      bval = pixel[2] >> rshift;\n\n      rmin = Math.min(rmin, rval);\n      rmax = Math.max(rmax, rval);\n      gmin = Math.min(gmin, gval);\n      gmax = Math.max(gmax, gval);\n      bmin = Math.min(bmin, bval);\n      bmax = Math.max(bmax, bval);\n    });\n    return new VBox(rmin, rmax, gmin, gmax, bmin, bmax, histo);\n  }\n\n  function medianCutApply(histo, vbox) {\n    if (!vbox.count()) {\n      return;\n    }\n    // 取rgb三原色中差值最大的那个\n    var rw = vbox.r2 - vbox.r1 + 1,\n      gw = vbox.g2 - vbox.g1 + 1,\n      bw = vbox.b2 - vbox.b1 + 1,\n      maxw = pv.max([rw, gw, bw]); // only one pixel, no split\n\n    if (vbox.count() === 1) {\n      return [vbox.copy()];\n    }\n    /* Find the partial sum arrays along the selected axis. */\n    // prettier-ignore\n    var total = 0, partialsum = [], lookaheadsum = [],\n      i, j,  k, sum, index;\n\n    if (maxw === rw) {\n      for (i = vbox.r1; i <= vbox.r2; i++) {\n        sum = 0;\n        for (j = vbox.g1; j <= vbox.g2; j++) {\n          for (k = vbox.b1; k <= vbox.b2; k++) {\n            index = getColorIndex(i, j, k);\n            sum += histo[index] || 0;\n          }\n        }\n        total += sum;\n        partialsum[i] = total;\n      }\n    } else if (maxw === gw) {\n      for (i = vbox.g1; i <= vbox.g2; i++) {\n        sum = 0;\n\n        for (j = vbox.r1; j <= vbox.r2; j++) {\n          for (k = vbox.b1; k <= vbox.b2; k++) {\n            index = getColorIndex(j, i, k);\n            sum += histo[index] || 0;\n          }\n        }\n\n        total += sum;\n        partialsum[i] = total;\n      }\n    } else {\n      /* maxw == bw */\n      for (i = vbox.b1; i <= vbox.b2; i++) {\n        sum = 0;\n\n        for (j = vbox.r1; j <= vbox.r2; j++) {\n          for (k = vbox.g1; k <= vbox.g2; k++) {\n            index = getColorIndex(j, k, i);\n            sum += histo[index] || 0;\n          }\n        }\n\n        total += sum;\n        partialsum[i] = total;\n      }\n    }\n\n    partialsum.forEach(function(d, i) {\n      lookaheadsum[i] = total - d;\n    });\n\n    function doCut(color) {\n      // prettier-ignore\n      var dim1 = color + \"1\", dim2 = color + \"2\",\n        left, right, vbox1, vbox2, d2, count2 = 0;\n\n      for (i = vbox[dim1]; i <= vbox[dim2]; i++) {\n        if (partialsum[i] > total / 2) {\n          vbox1 = vbox.copy();\n          vbox2 = vbox.copy();\n          left = i - vbox[dim1];\n          right = vbox[dim2] - i;\n          if (left <= right) {\n            d2 = Math.min(vbox[dim2] - 1, ~~(i + right / 2));\n          } else {\n            d2 = Math.max(vbox[dim1], ~~(i - 1 - left / 2));\n          } // avoid 0-count boxes\n\n          while (!partialsum[d2]) {\n            d2++;\n          }\n\n          count2 = lookaheadsum[d2];\n\n          while (!count2 && partialsum[d2 - 1]) {\n            count2 = lookaheadsum[--d2];\n          }\n          // set dimensions\n          vbox1[dim2] = d2;\n          vbox2[dim1] = vbox1[dim2] + 1; // console.log('vbox counts:', vbox.count(), vbox1.count(), vbox2.count());\n\n          return [vbox1, vbox2];\n        }\n      }\n    }\n    // determine the cut planes\n    return maxw === rw ? doCut(\"r\") : maxw === gw ? doCut(\"g\") : doCut(\"b\");\n  }\n\n  function quantize(pixels, maxcolors) {\n    // short-circuit\n    if (!pixels.length || maxcolors < 2 || maxcolors > 256) {\n      // console.log('wrong number of maxcolors');\n      return false;\n    }\n    // XXX: check color content and convert to grayscale if insufficient\n    var histo = getHisto(pixels);\n    // check that we aren't below maxcolors already\n    histo.forEach(function() {});\n    // get the beginning vbox from the colors\n    var vbox = vboxFromPixels(pixels, histo),\n      pq = new PQueue(function(a, b) {\n        return pv.naturalOrder(a.count(), b.count());\n      });\n    pq.push(vbox); // inner function to do the iteration\n\n    function iter(lh, target) {\n      // prettier-ignore\n      var ncolors = lh.size(), niters = 0, vbox;\n      while (niters < maxIterations) {\n        if (ncolors >= target) {\n          return;\n        }\n\n        if (niters++ > maxIterations) {\n          // console.log(\"infinite loop; perhaps too few pixels!\");\n          return;\n        }\n\n        vbox = lh.pop();\n\n        if (!vbox.count()) {\n          /* just put it back */\n          lh.push(vbox);\n          niters++;\n          continue;\n        } // do the cut\n\n        var vboxes = medianCutApply(histo, vbox),\n          vbox1 = vboxes[0],\n          vbox2 = vboxes[1];\n\n        if (!vbox1) {\n          // console.log(\"vbox1 not defined; shouldn't happen!\");\n          return;\n        }\n\n        lh.push(vbox1);\n\n        if (vbox2) {\n          /* vbox2 can be null */\n          lh.push(vbox2);\n          ncolors++;\n        }\n      }\n    }\n\n    // first set of colors, sorted by population\n    iter(pq, fractByPopulations * maxcolors);\n    // console.log(pq.size(), pq.debug().length, pq.debug().slice());\n    // Re-sort by the product of pixel occupancy times the size in color space.\n\n    var pq2 = new PQueue(function(a, b) {\n      return pv.naturalOrder(a.count() * a.volume(), b.count() * b.volume());\n    });\n\n    while (pq.size()) {\n      pq2.push(pq.pop());\n    } // next set - generate the median cuts using the (npix * vol) sorting.\n\n    iter(pq2, maxcolors); // calculate the actual colors\n\n    var cmap = new CMap();\n\n    while (pq2.size()) {\n      cmap.push(pq2.pop());\n    }\n\n    return cmap;\n  }\n\n  return {\n    quantize: quantize\n  };\n})();\n\nvar quantize = MMCQ.quantize;\n\nmodule.exports = quantize;\n","function createPixelArray(imgData, pixelCount, quality) {\n  const pixels = imgData;\n  const pixelArray = [];\n\n  for (let i = 0, offset, r, g, b, a; i < pixelCount; i = i + quality) {\n    offset = i * 4;\n    r = pixels[offset + 0];\n    g = pixels[offset + 1];\n    b = pixels[offset + 2];\n    a = pixels[offset + 3];\n\n    // If pixel is mostly opaque and not white\n    if (typeof a === \"undefined\" || a >= 125) {\n      if (!(r > 250 && g > 250 && b > 250)) {\n        pixelArray.push([r, g, b]);\n      }\n    }\n  }\n  return pixelArray;\n}\n\nfunction validateOptions(options) {\n  let { colorCount, quality } = options;\n\n  if (typeof colorCount === \"undefined\" || !Number.isInteger(colorCount)) {\n    colorCount = 10;\n  } else if (colorCount === 1) {\n    throw new Error(\n      \"colorCount should be between 2 and 20. To get one color, call getColor() instead of getPalette()\"\n    );\n  } else {\n    colorCount = Math.max(colorCount, 2);\n    colorCount = Math.min(colorCount, 20);\n  }\n\n  if (typeof quality === \"undefined\" || Number.isInteger(quality)) {\n    quality = 10;\n  } else if (quality < 1) {\n    quality = 10;\n  }\n\n  return {\n    colorCount,\n    quality\n  };\n}\n\nmodule.exports = {\n  createPixelArray,\n  validateOptions\n};\n","import React from \"react\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Nav = styled.nav`\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  padding: 0.5rem 1rem;\n  display: flex;\n`;\n\nfunction MyHeader() {\n  let match = useRouteMatch();\n  return (\n    <Nav className=\"nav\">\n      <div className=\"nav-inner\">\n        <div className=\"nav-items\">\n          {/* <Link to=\"/\" className=\"nav-logo\">\n            <strong className=\"header-title\">Echo Yang</strong>\n          </Link> */}\n        </div>\n        <div className=\"nav-items nav-items-right\">\n          <Link to={`${match.url}/`} className=\"nav-item nav-link\">\n            Coloooor\n          </Link>\n          <Link to={`${match.url}/about`} className=\"nav-item nav-link\">\n            About\n          </Link>\n          <Link\n            to=\"https://github.com/LiebeG/image-color-palette\"\n            className=\"nav-item nav-link\"\n          >\n            Github\n          </Link>\n        </div>\n      </div>\n    </Nav>\n  );\n}\n\nexport default MyHeader;\n","import React from \"react\";\n\nfunction Title(props) {\n  return (\n    <div className=\"title-area\">\n      <h1>{props.title}</h1>\n      <div className=\"article-content-meta\">\n        <div className=\"author-area\">\n          <div className=\"tag\">Author</div>\n          <a href=\"#\" className=\"author-na\">\n            {props.author}\n          </a>\n        </div>\n        <div className=\"created-area\">\n          <div className=\"tag\">Created</div>\n          <time>{props.created}</time>\n        </div>\n        <div className=\"created-area\">\n          <div className=\"tag\">Updated</div>\n          <time>{props.updated}</time>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Title;\n","import React from \"react\";\n\nfunction IconUpload() {\n  return (\n    <svg\n      className=\"box-icon\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"50\"\n      height=\"43\"\n      viewBox=\"0 0 50 43\"\n    >\n      <path d=\"M48.4 26.5c-.9 0-1.7.7-1.7 1.7v11.6h-43.3v-11.6c0-.9-.7-1.7-1.7-1.7s-1.7.7-1.7 1.7v13.2c0 .9.7 1.7 1.7 1.7h46.7c.9 0 1.7-.7 1.7-1.7v-13.2c0-1-.7-1.7-1.7-1.7zm-24.5 6.1c.3.3.8.5 1.2.5.4 0 .9-.2 1.2-.5l10-11.6c.7-.7.7-1.7 0-2.4s-1.7-.7-2.4 0l-7.1 8.3v-25.3c0-.9-.7-1.7-1.7-1.7s-1.7.7-1.7 1.7v25.3l-7.1-8.3c-.7-.7-1.7-.7-2.4 0s-.7 1.7 0 2.4l10 11.6z\"></path>\n    </svg>\n  );\n}\n\nexport default IconUpload;\n","import React, { useState, useRef } from \"react\";\nimport IconUpload from \"./iconUpload\";\n\nconst ImgUploadBox = React.forwardRef((props, userImgRef) => {\n  const uploadRef = useRef(null);\n  const dropzoneRef = useRef(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [height, setHeight] = useState(0);\n\n  const dragEnterHandler = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const dragOverHandler = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    dropzoneRef.current.classList.add(\"is-dragover\");\n  };\n\n  const dragLeaveHandler = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    dropzoneRef.current.classList.remove(\"is-dragover\");\n  };\n\n  const dropHandler = e => {\n    e.preventDefault();\n    var data = e.dataTransfer.items;\n    if (!data || data.length < 1) return;\n    if (data.length > 1) return window.alert(\"Please only drop one file\");\n    if (data[0].kind === \"file\" && data[0].type.match(\"^image/\")) {\n      var file = data[0].getAsFile();\n      showImage(file);\n    } else {\n      window.alert(\"Please use a image file ;)\");\n    }\n    dropzoneRef.current.classList.remove(\"is-dragover\");\n  };\n\n  const showImage = file => {\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n    // Async loading\n    reader.onload = function() {\n      var image = new Image();\n      image.src = this.result;\n      image.onload = function() {\n        userImgRef.current.src = this.src;\n        setIsLoaded(true);\n        setHeight(userImgRef.current.height);\n      };\n    };\n  };\n\n  const handleUploadClick = () => {\n    uploadRef.current.click();\n  };\n\n  const handleUploadChange = () => {\n    let file = uploadRef.current.files[0];\n    if (!file) return false;\n    if (!/image\\//.test(file.type)) {\n      console.log(\"This file is not image, please upload an image file.\");\n      return false;\n    }\n    showImage(file);\n  };\n\n  return (\n    <div className=\"imgUploadBox\">\n      <div\n        id=\"drop-zone\"\n        ref={dropzoneRef}\n        onDragEnter={dragEnterHandler}\n        onDragOver={dragOverHandler}\n        onDragLeave={dragLeaveHandler}\n        onDrop={dropHandler}\n        onClick={handleUploadClick}\n        style={{\n          height: height ? height + \"px\" : \"350px\"\n        }}\n      >\n        <div className=\"box-input\">\n          <input\n            className=\"input-img-upload\"\n            type=\"file\"\n            id=\"input\"\n            ref={uploadRef}\n            onChange={handleUploadChange}\n          ></input>\n        </div>\n        <div\n          className=\"box-sample\"\n          style={isLoaded ? { visibility: \"hidden\" } : {}}\n        >\n          <IconUpload />\n          <label className=\"box-label\">\n            Drag one picture to this Drop Zone ...\n          </label>\n        </div>\n        <div className={isLoaded ? \"box-user box-user-active\" : \"box-user\"}>\n          <img src=\"/\" alt=\"\" ref={userImgRef} />\n        </div>\n        <div className=\"drag-overlay\"></div>\n      </div>\n\n      <style jsx=\"true\">\n        {`\n          .imgUploadBox {\n            margin-bottom: 3rem;\n          }\n          #drop-zone {\n            width: 580px;\n            border: 1px solid black;\n            outline: 1px dashed #000;\n            outline-offset: -10px;\n            position: relative;\n            height: 350px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            margin: 20px auto;\n            -webkit-transition: outline-offset 0.15s ease-in-out,\n              background-color 0.15s linear;\n            transition: outline-offset 0.15s ease-in-out,\n              background-color 0.15s linear;\n          }\n          .box-icon {\n            width: 100%;\n            height: 80px;\n            fill: #7a7a8c;\n            display: block;\n            margin-bottom: 40px;\n          }\n          .box-label {\n            text-overflow: ellipsis;\n            white-space: nowrap;\n            cursor: pointer;\n            display: block;\n            text-align: center;\n            overflow: hidden;\n          }\n          #drop-zone.is-dragover {\n            outline: 2px dashed #92b0b3;\n            outline-offset: 0px;\n            background-color: #fff;\n          }\n          .box-user {\n            position: absolute;\n            width: 100%;\n            top: 0;\n            z-index: 2;\n          }\n          .box-user img {\n            width: 580px;\n          }\n          .box-user-active {\n          }\n        `}\n      </style>\n    </div>\n  );\n});\n\nexport default ImgUploadBox;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst MyButton = styled.button`\n  border: none;\n  padding: 0.625rem 1rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  background-color: rgb(0, 0, 0, 0.1);\n  &.reverse {\n    color: white;\n    background-color: #000;\n  }\n`;\n\nfunction Button(props) {\n  const { onClick, children, color, reverse } = props;\n  return (\n    <MyButton\n      className={reverse ? \"reverse\" : \"\"}\n      onClick={onClick}\n      style={{ backgroundColor: color }}\n    >\n      {children}\n    </MyButton>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst SwatchDIV = styled.div`\n  display: inline-block;\n  background: #afafaf;\n  border-radius: 50%;\n  width: 3rem;\n  height: 3rem;\n  margin-right: 0.4rem;\n  box-shadow: 0 15px 30px 0 rgba(0, 0, 0, 0.11),\n    0 5px 15px 0 rgba(0, 0, 0, 0.08);\n  &.placeholder span {\n    height: 3rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n    font-size: 1.6rem;\n  }\n`;\n\nfunction Swatch({ color, placeholder }) {\n  return placeholder ? (\n    <SwatchDIV className=\"placeholder\">\n      {\" \"}\n      <span>P</span>{\" \"}\n    </SwatchDIV>\n  ) : (\n    <SwatchDIV className=\"swatch\" style={{ backgroundColor: color }} />\n  );\n}\n\nexport default Swatch;\n","import React from \"react\";\nimport Swatch from \"./Swatch\";\nimport styled from \"styled-components\";\n\nconst FlexBox = styled.div`\n  display: flex;\n  .main-color {\n    flex: 0 1 16rem;\n    margin-right: 2rem;\n  }\n  .color-palette {\n  }\n  h3 {\n    margin-top: 0;\n  }\n`;\n\nfunction ColorBox({ mainColor, palette }) {\n  return (\n    <FlexBox>\n      <div className=\"main-color\">\n        <h3>Main Color</h3>\n        <div className=\"swatches\">\n          {mainColor.length !== 0 ? (\n            mainColor.map((c, index) => <Swatch color={c} key={index} />)\n          ) : (\n            <Swatch placeholder={true} />\n          )}\n        </div>\n      </div>\n      <div className=\"color-palette\">\n        <h3>Color Palette</h3>\n        <div className=\"swatches\">\n          {palette.length !== 0 ? (\n            palette.map((c, index) => <Swatch color={c} key={index} />)\n          ) : (\n            <>\n              <Swatch placeholder={true} />\n              <Swatch placeholder={true} />\n              <Swatch placeholder={true} />\n            </>\n          )}\n        </div>\n      </div>\n    </FlexBox>\n  );\n}\n\nexport default ColorBox;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Box = styled.div`\n  border: 1px dashed #000;\n  margin-top: 1.5rem;\n  margin-bottom: 2rem;\n  width: 100%;\n  white-space: pre-wrap;\n  padding: 1.5rem;\n  box-sizing: border-box;\n  line-height: 1.5;\n  overflow-x: auto;\n`;\n\nfunction InfoBox({ children }) {\n  return <Box>{children}</Box>;\n}\n\nexport default InfoBox;\n","function _convertPixelsToRGB(pixels) {\n  const width = pixels.width;\n  const height = pixels.height;\n  const rgbVals = [];\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const index = (y * width + x) * 4;\n      rgbVals.push({\n        r: pixels.data[index],\n        g: pixels.data[index + 1],\n        b: pixels.data[index + 2]\n      });\n    }\n  }\n  return rgbVals;\n}\n\nfunction _rgbArray2String(rgbArr) {\n  return rgbArr.map(n => `rgb(${n.join(\",\")})`);\n}\n\nfunction _rgbObj2String(rgbObj) {\n  return `rgb(${rgbObj.r}, ${rgbObj.g}, ${rgbObj.b})`;\n}\n\nfunction _getImageData(image) {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  const width = (canvas.width = image.width);\n  const height = (canvas.height = image.height);\n  context.drawImage(image, 0, 0, width, height);\n  return context.getImageData(0, 0, width, height);\n}\n\nexport { _convertPixelsToRGB, _rgbArray2String, _rgbObj2String, _getImageData };\n","/**\n * Method: Median Cut\n * From Sample Media (VOD) App\n * https://github.com/paullewis/sample-media-pwa\n */\n/**\n *\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { _convertPixelsToRGB } from \"../../utils/imageUtils\";\n\nclass Swatch {\n  static get DEFAULT_DEPTH() {\n    return 4;\n  }\n\n  getSwatch(imgData) {\n    let processInfo = {\n      colors: 0,\n      time: 0\n    };\n    const start = performance.now();\n    const rgbArray = _convertPixelsToRGB(imgData);\n    const buckets = this.quantize(rgbArray);\n    const swatch = this.orderByLuminance(buckets);\n    const end = performance.now();\n    processInfo.time = end - start;\n    return {\n      mc: this.getMostVariantColor(swatch),\n      palette: swatch.slice(1, 9),\n      info: processInfo\n    };\n  }\n\n  getSwatchByCanvas(imgCanvas) {\n    let processInfo = {\n      colors: 0,\n      time: 0\n    };\n    const start = performance.now();\n    const ctx = imgCanvas.getContext(\"2d\");\n    const imgData = ctx.getImageData(0, 0, imgCanvas.width, imgCanvas.height);\n    const rgbArray = _convertPixelsToRGB(imgData);\n    const buckets = this.quantize(rgbArray);\n    const swatch = this.orderByLuminance(buckets);\n    const end = performance.now();\n    processInfo.time = end - start;\n    return {\n      mc: this.getMostVariantColor(swatch),\n      palette: swatch.slice(1, 9),\n      info: processInfo\n    };\n  }\n\n  _findBiggestRange(rgbVals) {\n    let rMin = Number.POSITIVE_INFINITY;\n    let rMax = Number.NEGATIVE_INFINITY;\n\n    let gMin = Number.POSITIVE_INFINITY;\n    let gMax = Number.NEGATIVE_INFINITY;\n\n    let bMin = Number.POSITIVE_INFINITY;\n    let bMax = Number.NEGATIVE_INFINITY;\n\n    rgbVals.forEach(pixel => {\n      rMin = Math.min(rMin, pixel.r);\n      rMax = Math.max(rMax, pixel.r);\n      gMin = Math.min(gMin, pixel.g);\n      gMax = Math.max(gMax, pixel.g);\n      bMin = Math.min(bMin, pixel.b);\n      bMax = Math.max(bMax, pixel.b);\n    });\n\n    const rRange = rMax - rMin;\n    const gRange = gMax - gMin;\n    const bRange = bMax - bMin;\n\n    const biggestRange = Math.max(rRange, gRange, bRange);\n    if (biggestRange === rRange) {\n      return \"r\";\n    } else if (biggestRange === gRange) {\n      return \"g\";\n    }\n    return \"b\";\n  }\n\n  quantize(rgbVals, depth = 0, maxDepth = Swatch.DEFAULT_DEPTH) {\n    if (depth === 0) {\n      console.log(`Quantizing to ${Math.pow(2, maxDepth)} buckets.`);\n    }\n\n    // Base case: average the RGB values down to a single average value.\n    if (depth === maxDepth) {\n      const color = rgbVals.reduce(\n        (prev, curr) => {\n          prev.r += curr.r;\n          prev.g += curr.g;\n          prev.b += curr.b;\n          return prev;\n        },\n        { r: 0, g: 0, b: 0 }\n      );\n\n      color.r = Math.round(color.r / rgbVals.length);\n      color.g = Math.round(color.g / rgbVals.length);\n      color.b = Math.round(color.b / rgbVals.length);\n\n      return [color];\n    }\n\n    // Recursive case: find the component with the biggest range,\n    // sort by it, then divide the RGB values in half, and go again.\n    const componentToSortBy = this._findBiggestRange(rgbVals);\n    rgbVals.sort((p1, p2) => {\n      return p1[componentToSortBy] - p2[componentToSortBy];\n    });\n\n    const mid = rgbVals.length / 2;\n    return [\n      ...this.quantize(rgbVals.slice(0, mid), depth + 1, maxDepth),\n      ...this.quantize(rgbVals.slice(mid + 1), depth + 1, maxDepth)\n    ];\n  }\n\n  orderByLuminance(rgbVals) {\n    const calcLuminance = p => {\n      return 0.2126 * p.r + 0.7152 * p.g + 0.0722 * p.b;\n    };\n\n    return rgbVals.sort((p1, p2) => {\n      return calcLuminance(p1) - calcLuminance(p2);\n    });\n  }\n\n  getMostVariantColor(rgbVals) {\n    let index = 0;\n    let max = Number.NEGATIVE_INFINITY;\n    rgbVals\n      // Remap each RGB value to a variance by taking the max component from the\n      // min component.\n      .map(v => Math.max(v.r, v.g, v.b) - Math.min(v.r, v.g, v.b))\n\n      // Then step through each value and find which has the largest value.\n      .forEach((v, i) => {\n        if (v > max) {\n          index = i;\n          max = v;\n        }\n      });\n\n    return rgbVals[index];\n  }\n\n  lighten(rgbVal, percentage) {\n    const factor = 1 + percentage / 100;\n    return this._adjustColor(rgbVal, factor);\n  }\n\n  darken(rgbVal, percentage) {\n    const factor = 1 - percentage / 100;\n    return this._adjustColor(rgbVal, factor);\n  }\n\n  _clamp(value, min, max) {\n    return Math.min(max, Math.max(min, value));\n  }\n\n  _adjustColor(rgbVal, factor) {\n    return {\n      r: this._clamp(Math.round(rgbVal.r * factor), 0, 255),\n      g: this._clamp(Math.round(rgbVal.g * factor), 0, 255),\n      b: this._clamp(Math.round(rgbVal.b * factor), 0, 255)\n    };\n  }\n}\n\nexport default Swatch;\n","function rgbToHsl(r, g, b) {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  // prettier-ignore\n  var max = Math.max(r, g, b), min = Math.min(r, g, b);\n  // prettier-ignore\n  var h,s,l = (max + min) / 2;\n\n  if (max === min) {\n    h = s = 0; // achromatic\n  } else {\n    var d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n      default:\n        break;\n    }\n    h *= 60;\n  }\n  return [h, s * 100, l * 100];\n}\n\nfunction hslToRgb(h, s, l) {\n  h = h / 360;\n  s = s / 100;\n  l = l / 100;\n  var r, g, b;\n\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    var hue2rgb = function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    };\n\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n  return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n}\n\nfunction rgbToHex(rgb) {\n  var color = \"#\";\n  var tmp;\n  for (var i = 0; i < rgb.length; i++) {\n    tmp = rgb[i].toString(16);\n    color += tmp.length < 2 ? \"0\" + tmp : tmp;\n  }\n  return color;\n}\n\nexport { rgbToHsl, hslToRgb, rgbToHex };\n","/**\n * Method: K Means Cluster\n * From Colorful Color\n * https://github.com/woshizja/colorful-color\n */\nimport { rgbToHsl, hslToRgb, rgbToHex } from \"./utils.js\";\n\nclass PickerKMC {\n  censusColors(imageData, K, callBack) {\n    let start = +new Date();\n    let processInfo = {\n      colors: 0,\n      time: 0,\n      kmeansIteration: 0,\n      kmeansTime: 0,\n      top5Count: 0\n    };\n    let rows = imageData.height;\n    let cols = imageData.width;\n    let keys = [];\n    let colors_info = [];\n    let h_key, s_key, l_key, r, g, b;\n    let pixel_count = 0;\n    let pixel_step = rows * cols < 600 * 600 ? 1 : 2;\n    console.log(\"pixel step\", pixel_step);\n    // ?????\n    let color_step = Math.round(0.1066 * K * K - 2.7463 * K + 17.2795);\n    color_step = color_step < 4 ? 4 : color_step;\n    console.log(\"color step\", color_step);\n\n    let hsl, key;\n    // 从总像素数据中取样，行列的行走距离都为 pixel_step\n    for (let row = 1; row < rows - 1; ) {\n      for (let col = 1; col < cols - 1; ) {\n        const pindex = row * cols * 4 + col * 4;\n        r = imageData.data[pindex];\n        g = imageData.data[pindex + 1];\n        b = imageData.data[pindex + 2];\n        hsl = rgbToHsl(r, g, b);\n        if (hsl[2] > 97 || (hsl[2] > 95 && hsl[1] < 30)) {\n          col += pixel_step;\n          continue; // too bright\n        }\n        if (hsl[2] < 3 || (hsl[2] < 5 && hsl[1] < 30)) {\n          col += pixel_step;\n          continue; // too dark\n        }\n        pixel_count++;\n        h_key = Math.floor(hsl[0] / 10) * 10000;\n        s_key = Math.floor(hsl[1] / 5) * 100;\n        l_key = Math.floor(hsl[2] / 5);\n        key = h_key + s_key + l_key;\n        let index = keys.indexOf(key);\n        if (index < 0) {\n          keys.push(key);\n          // prettier-ignore\n          colors_info.push({\n            key: key, fre: 1, r: r, g: g, b: b,\n            h: hsl[0], s: hsl[1], l: hsl[2], category: -1\n          });\n        } else {\n          colors_info[index].fre++;\n        }\n        col += pixel_step;\n      }\n      row += pixel_step;\n    }\n    console.log(\"pixel_count: \", pixel_count);\n    processInfo.time = +new Date() - start;\n    processInfo.colors = colors_info.length;\n    console.log(\"time for process all pixel: \", processInfo.time);\n\n    start = +new Date();\n    // sort and filter rgb_census\n    colors_info.sort(function(pre, next) {\n      return next.fre - pre.fre;\n    });\n    let len = colors_info.length;\n    console.log(\"before filter: \", len);\n    colors_info = colors_info.filter(color => {\n      // isolated color\n      let flag = color.fre < 5 - pixel_step && len > 400;\n      return !flag;\n    });\n    console.log(\"after filter: \", colors_info.length);\n    let main_color = [colors_info[0], colors_info[1], colors_info[2]];\n    // k-mean clustering\n    let init_seed_1 = this.chooseSeedColors(colors_info, K);\n    let cluster_res = this.kMC(colors_info, init_seed_1, 100);\n    let cluster_res_1 = cluster_res[0];\n    cluster_res_1 = cluster_res_1.map(color => {\n      return rgbToHex(hslToRgb(color.h, color.s, color.l));\n    });\n    // // prettier-ignore\n    // let r_count = 0, g_count = 0, b_count = 0, f_count = 0;\n    // len = colors_info.length;\n\n    // while (len--) {\n    //   r_count += colors_info[len].r * colors_info[len].fre;\n    //   g_count += colors_info[len].g * colors_info[len].fre;\n    //   b_count += colors_info[len].b * colors_info[len].fre;\n    //   f_count += colors_info[len].fre;\n    // }\n\n    // let average_color = rgbToHsl(\n    //   Math.floor(r_count / f_count),\n    //   Math.floor(g_count / f_count),\n    //   Math.floor(b_count / f_count)\n    // );\n    // average_color = {\n    //   h: average_color[0],\n    //   s: average_color[1],\n    //   l: average_color[2]\n    // };\n    let main_color_a =\n      \"rgba(\" +\n      colors_info[0].r +\n      \",\" +\n      colors_info[0].g +\n      \",\" +\n      colors_info[0].b +\n      \",0.62)\";\n\n    processInfo.kmeansTime = +new Date() - start;\n    processInfo.kmeansIteration = cluster_res[1];\n    console.log(\"time for K-means: \", processInfo.kmeansTime);\n    // this.setState({\n    //   colorsInfo: colors_info,\n    //   clusterColors: cluster_res_1,\n    //   mainColor: main_color,\n    //   averageColor: average_color,\n    //   processInfo: processInfo\n    // });\n    if (callBack instanceof Function) {\n      callBack(main_color_a, cluster_res_1);\n    }\n    return {\n      mc: main_color,\n      palette: cluster_res_1,\n      info: processInfo\n    };\n  }\n\n  chooseSeedColors(colors, num) {\n    let init_seed = [];\n    let len = colors.length;\n    let l;\n    for (let i = 0; i < len; i++) {\n      l = init_seed.length;\n      let color = colors[i];\n      if (!i) {\n        color.category = 0;\n        // prettier-ignore\n        init_seed.push({\n          h: color.h,s: color.s,l: color.l,\n          category: color.category,fre: color.fre\n        });\n        continue;\n      }\n      let j = 0;\n      for (; j < l; j++) {\n        let h_diff = Math.abs(init_seed[j].h - color.h);\n        let s_diff = Math.abs(init_seed[j].s - color.s);\n        let l_diff = Math.abs(init_seed[j].l - color.l);\n        if (h_diff + s_diff + l_diff < 45) {\n          break;\n        }\n      }\n      if (j === l) {\n        color.category = init_seed.length;\n        // prettier-ignore\n        init_seed.push({\n          h: color.h,s: color.s,l: color.l,\n          category: color.category,fre: color.fre\n        });\n      }\n      if (init_seed.length >= num) {\n        break;\n      }\n    }\n    return init_seed;\n  }\n\n  kMC(colors, seeds, max_step) {\n    let iteration_count = 0;\n\n    while (iteration_count++ < max_step) {\n      // filter seeds\n      seeds = seeds.filter(seed => {\n        return seed;\n      });\n\n      // divide colors into different categories with duff's device\n      let len = colors.length;\n      // //`value ^ 0` is the same as `Math.floor` for positive numbers and `Math.ceil` for negative numbers\n      let count = (len / 8) ^ 0;\n      let start = len % 8;\n      while (start--) {\n        this.classifyColor(colors[start], seeds);\n      }\n      while (count--) {\n        this.classifyColor(colors[--len], seeds);\n        this.classifyColor(colors[--len], seeds);\n        this.classifyColor(colors[--len], seeds);\n        this.classifyColor(colors[--len], seeds);\n        this.classifyColor(colors[--len], seeds);\n        this.classifyColor(colors[--len], seeds);\n        this.classifyColor(colors[--len], seeds);\n        this.classifyColor(colors[--len], seeds);\n      }\n\n      // compute center of category\n      len = colors.length;\n      let hsl_count = [];\n      let category;\n      while (len--) {\n        category = colors[len].category;\n        if (!hsl_count[category]) {\n          hsl_count[category] = {};\n          hsl_count[category].h = 0;\n          hsl_count[category].s = 0;\n          hsl_count[category].l = 0;\n          hsl_count[category].fre_count = colors[len].fre;\n        } else {\n          hsl_count[category].fre_count += colors[len].fre;\n        }\n      }\n      len = colors.length;\n      while (len--) {\n        category = colors[len].category;\n        hsl_count[category].h +=\n          (colors[len].h * colors[len].fre) / hsl_count[category].fre_count;\n        hsl_count[category].s +=\n          (colors[len].s * colors[len].fre) / hsl_count[category].fre_count;\n        hsl_count[category].l +=\n          (colors[len].l * colors[len].fre) / hsl_count[category].fre_count;\n      }\n      let flag = hsl_count.every((ele, index) => {\n        return (\n          Math.abs(ele.h - seeds[index].h) < 0.5 &&\n          Math.abs(ele.s - seeds[index].s) < 0.5 &&\n          Math.abs(ele.l - seeds[index].l) < 0.5\n        );\n      });\n      seeds = hsl_count.map((ele, index) => {\n        return {\n          h: ele.h,\n          s: ele.s,\n          l: ele.l,\n          category: index,\n          fre: ele.fre_count\n        };\n      });\n      if (flag) {\n        break;\n      }\n    }\n    console.log(\"KMC iteration \" + iteration_count);\n    seeds.sort(function(pre, next) {\n      let pre_rgb = hslToRgb(pre.h, pre.s, pre.l);\n      pre_rgb = pre_rgb[0] + pre_rgb[1] + pre_rgb[2];\n      // let next_h = next.h;\n      // next_h = next_h < 30 ? (next_h+330) : next_h;\n      let next_rgb = hslToRgb(next.h, next.s, next.l);\n      next_rgb = next_rgb[0] + next_rgb[1] + next_rgb[2];\n      return next_rgb - pre_rgb;\n    });\n    return [seeds, iteration_count];\n  }\n\n  classifyColor(color, classes) {\n    let len = classes.length;\n    let min = 10000;\n    let min_index;\n    while (len--) {\n      let distance =\n        Math.abs(classes[len].h - color.h) +\n        Math.abs(classes[len].s - color.s) +\n        Math.abs(classes[len].l - color.l);\n      if (distance < min) {\n        min = distance;\n        min_index = len;\n      }\n    }\n    color.category = min_index;\n  }\n}\n\nexport default PickerKMC;\n","function rgbToHsl(r, g, b) {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  // prettier-ignore\n  var max = Math.max(r, g, b), min = Math.min(r, g, b);\n  // prettier-ignore\n  var h,s,l = (max + min) / 2;\n\n  if (max === min) {\n    h = s = 0; // achromatic\n  } else {\n    var d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n      default:\n        break;\n    }\n    h *= 60;\n  }\n  return [h, s * 100, l * 100];\n}\n\nfunction hslToRgb(h, s, l) {\n  h = h / 360;\n  s = s / 100;\n  l = l / 100;\n  var r, g, b;\n\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    var hue2rgb = function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    };\n\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n  return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n}\n\nfunction rgbToHex(rgb) {\n  var color = \"#\";\n  var tmp;\n  for (var i = 0; i < rgb.length; i++) {\n    tmp = rgb[i].toString(16);\n    color += tmp.length < 2 ? \"0\" + tmp : tmp;\n  }\n  return color;\n}\n\nexport { rgbToHsl, hslToRgb, rgbToHex };\n","/**\n * Method: K Means Cluster\n * A minor revision from Colorful Color\n * https://github.com/woshizja/colorful-color\n * 1. delete color_step (because it doesn't use in later)\n * 2. delete color filtering (because it would remove white and black, which cause problem when background color is white and black)\n * 3. delete color sorting\n */\nimport { rgbToHsl, hslToRgb, rgbToHex } from \"./utils\";\n\nclass PickerKMC {\n  censusColors(imageData, K, callBack) {\n    let start = performance.now();\n    let processInfo = {\n      colors: 0,\n      time: 0,\n      kmeansIteration: 0,\n      kmeansTime: 0,\n      top5Count: 0\n    };\n    let rows = imageData.height;\n    let cols = imageData.width;\n    let keys = [];\n    let colors_info = [];\n    let h_key, s_key, l_key, r, g, b;\n    let pixel_count = 0;\n    let pixel_step = rows * cols < 600 * 600 ? 1 : 2;\n    console.log(\"pixel step\", pixel_step);\n\n    let hsl, key;\n    // 从总像素数据中取样，行列的行走距离都为 pixel_step\n    for (let row = 1; row < rows - 1; ) {\n      for (let col = 1; col < cols - 1; ) {\n        r = imageData.data[row * cols * 4 + col * 4];\n        g = imageData.data[row * cols * 4 + col * 4 + 1];\n        b = imageData.data[row * cols * 4 + col * 4 + 2];\n\n        // 使用hsl的原因\n        // 转换到HSL空间对于我们提取颜色的目标有以下好处：\n        // 1. 原来的RGB中三个值一样重要，对于HSL我们可以使用不同的参数分别去处理三个通道，比如对于色相可以稠密采样，对于明度和饱和度可以适当稀疏采样；\n        // 2. 对于不同颜色的控制更加精细准确，原始的RGB空间中我们很难判断两个不同颜色之间他们的RGB值关系，但是对于HSL我们只要关注色相就可以了（其它两个通道也很有用，只是这里选择忽略它们）；\n        hsl = rgbToHsl(r, g, b);\n\n        // 过滤过亮过黑的颜色；\n        // Filter colors are too bright or too dark\n        // if (hsl[2] > 97 || (hsl[2] > 95 && hsl[1] < 30)) {\n        //   col += pixel_step;\n        //   continue; // too bright\n        // }\n        // if (hsl[2] < 3 || (hsl[2] < 5 && hsl[1] < 30)) {\n        //   col += pixel_step;\n        //   continue; // too dark\n        // }\n\n        pixel_count++;\n        // 另一个减小精度的取样过程，但是我不知道为什么\n        // h/10，其他 s/5, l/5\n        // 可能原因：\n        // h的取值范围 [0, 360], s 与 l 的取值范围 [0, 100]\n        // h ~ [0, 36] / s, l ~ [0, 10]\n        // 所以虽然 h/10，但如同作者解释，人眼对色相比较敏感，所以取样时可以精确一些\n        h_key = Math.floor(hsl[0] / 10) * 10000;\n        s_key = Math.floor(hsl[1] / 5) * 100;\n        l_key = Math.floor(hsl[2] / 5);\n        key = h_key + s_key + l_key;\n        let index = keys.indexOf(key);\n        if (index < 0) {\n          keys.push(key);\n          // prettier-ignore\n          colors_info.push({\n            key: key, fre: 1, r: r, g: g, b: b,\n            h: hsl[0], s: hsl[1], l: hsl[2], category: -1\n          });\n        } else {\n          colors_info[index].fre++;\n        }\n        col += pixel_step;\n      }\n      row += pixel_step;\n    }\n    console.log(\"pixel_count: \", pixel_count);\n    processInfo.time = performance.now() - start;\n    processInfo.colors = colors_info.length;\n    console.log(\"time for process all pixel: \", processInfo.time);\n\n    start = performance.now();\n    // sort and filter rgb_census\n    colors_info.sort(function(pre, next) {\n      return next.fre - pre.fre;\n    });\n    let len = colors_info.length;\n    console.log(\"before filter: \", len);\n    colors_info = colors_info.filter(color => {\n      // isolated color\n      let flag = color.fre < 5 - pixel_step && len > 400;\n      return !flag;\n    });\n    console.log(\"after filter: \", colors_info.length);\n    let main_color = [colors_info[0], colors_info[1], colors_info[2]];\n    // k-mean clustering\n    // 1. 生成 k 个聚类中心点\n    let init_seed_1 = this.chooseSeedColors(colors_info, K);\n    let cluster_res = this.kMC(colors_info, init_seed_1, 100);\n    let cluster_res_1 = cluster_res[0];\n    cluster_res_1 = cluster_res_1.map(color => {\n      return rgbToHex(hslToRgb(color.h, color.s, color.l));\n    });\n    // // prettier-ignore\n    // let r_count = 0, g_count = 0, b_count = 0, f_count = 0;\n    // len = colors_info.length;\n\n    // while (len--) {\n    //   r_count += colors_info[len].r * colors_info[len].fre;\n    //   g_count += colors_info[len].g * colors_info[len].fre;\n    //   b_count += colors_info[len].b * colors_info[len].fre;\n    //   f_count += colors_info[len].fre;\n    // }\n\n    // let average_color = rgbToHsl(\n    //   Math.floor(r_count / f_count),\n    //   Math.floor(g_count / f_count),\n    //   Math.floor(b_count / f_count)\n    // );\n    // average_color = {\n    //   h: average_color[0],\n    //   s: average_color[1],\n    //   l: average_color[2]\n    // };\n    let main_color_a =\n      \"rgba(\" +\n      colors_info[0].r +\n      \",\" +\n      colors_info[0].g +\n      \",\" +\n      colors_info[0].b +\n      \",0.62)\";\n\n    processInfo.kmeansTime = performance.now() - start;\n    processInfo.kmeansIteration = cluster_res[1];\n    console.log(\"time for K-means: \", processInfo.kmeansTime);\n    // this.setState({\n    //   colorsInfo: colors_info,\n    //   clusterColors: cluster_res_1,\n    //   mainColor: main_color,\n    //   averageColor: average_color,\n    //   processInfo: processInfo\n    // });\n    if (callBack instanceof Function) {\n      callBack(main_color_a, cluster_res_1);\n    }\n    return {\n      mc: main_color,\n      palette: cluster_res_1,\n      info: processInfo\n    };\n  }\n\n  /**\n   * 生成 k 个聚类中心点 (seed colors)\n   * @param {array[objec]} colors color array\n   * @param {number} num the value of K\n   */\n  chooseSeedColors(colors, num) {\n    let init_seed = [];\n    let len = colors.length;\n    let l;\n    for (let i = 0; i < len; i++) {\n      l = init_seed.length;\n      let color = colors[i];\n      if (!i) {\n        color.category = 0;\n        // prettier-ignore\n        init_seed.push({\n          h: color.h,s: color.s,l: color.l,\n          category: color.category, fre: color.fre\n        });\n        continue;\n      }\n      let j = 0;\n      for (; j < l; j++) {\n        let h_diff = Math.abs(init_seed[j].h - color.h);\n        let s_diff = Math.abs(init_seed[j].s - color.s);\n        let l_diff = Math.abs(init_seed[j].l - color.l);\n        // 差异小，说明seed里面有与color[i]相近的颜色\n        // 退出循环，就不会有 j === l，开始一轮新的 i 循环\n        if (h_diff + s_diff + l_diff < 45) {\n          break;\n        }\n      }\n      if (j === l) {\n        color.category = init_seed.length;\n        // prettier-ignore\n        init_seed.push({\n          h: color.h, s: color.s, l: color.l,\n          category: color.category, fre: color.fre\n        });\n      }\n      if (init_seed.length >= num) {\n        break;\n      }\n    }\n    return init_seed;\n  }\n\n  /**\n   *\n   * @param {array[object]} colors 颜色值集合\n   * @param {array[object]} seeds 聚类中心点\n   * @param {number} max_step 最大迭代次数\n   */\n  kMC(colors, seeds, max_step) {\n    let iteration_count = 0;\n\n    while (iteration_count++ < max_step) {\n      // filter seeds\n      seeds = seeds.filter(seed => {\n        return seed;\n      });\n\n      // 1. divide colors into different categories with duff's device\n      // 为每个颜色值确定类别属性\n      let len = colors.length;\n      // //`value ^ 0` is the same as `Math.floor` for positive numbers and `Math.ceil` for negative numbers\n      let count = (len / 8) ^ 0;\n      let start = len % 8;\n      while (start--) {\n        this.classifyColor(colors[start], seeds);\n      }\n      while (count--) {\n        this.classifyColor(colors[--len], seeds);\n        this.classifyColor(colors[--len], seeds);\n        this.classifyColor(colors[--len], seeds);\n        this.classifyColor(colors[--len], seeds);\n        this.classifyColor(colors[--len], seeds);\n        this.classifyColor(colors[--len], seeds);\n        this.classifyColor(colors[--len], seeds);\n        this.classifyColor(colors[--len], seeds);\n      }\n\n      // 2. compute center of category\n      len = colors.length;\n      let hsl_count = [];\n      let category;\n      // 确定每个类别的颜色数量\n      while (len--) {\n        category = colors[len].category;\n        if (!hsl_count[category]) {\n          hsl_count[category] = {};\n          hsl_count[category].h = 0;\n          hsl_count[category].s = 0;\n          hsl_count[category].l = 0;\n          hsl_count[category].fre_count = colors[len].fre;\n        } else {\n          hsl_count[category].fre_count += colors[len].fre;\n        }\n      }\n      len = colors.length;\n      // 确定每个类别的 h/s/l 值\n      while (len--) {\n        category = colors[len].category;\n        hsl_count[category].h +=\n          (colors[len].h * colors[len].fre) / hsl_count[category].fre_count;\n        hsl_count[category].s +=\n          (colors[len].s * colors[len].fre) / hsl_count[category].fre_count;\n        hsl_count[category].l +=\n          (colors[len].l * colors[len].fre) / hsl_count[category].fre_count;\n      }\n      // 计算确定类别后的h/s/l值与聚类中心 (seeds) 的差异\n      // 如果每一个类的差异都小于0.5 则认为已收敛\n      let flag = hsl_count.every((ele, index) => {\n        return (\n          Math.abs(ele.h - seeds[index].h) < 0.5 &&\n          Math.abs(ele.s - seeds[index].s) < 0.5 &&\n          Math.abs(ele.l - seeds[index].l) < 0.5\n        );\n      });\n      // 重新确认聚类中心\n      seeds = hsl_count.map((ele, index) => {\n        return {\n          h: ele.h,\n          s: ele.s,\n          l: ele.l,\n          category: index,\n          fre: ele.fre_count\n        };\n      });\n      // 注意退出循环的顺序，生成seeds在判断flag之前\n      if (flag) {\n        break;\n      }\n    }\n    console.log(\"KMC iteration \" + iteration_count);\n    // 为什么要排序呢？？\n    // seeds.sort(function(pre, next) {\n    //   let pre_rgb = hslToRgb(pre.h, pre.s, pre.l);\n    //   pre_rgb = pre_rgb[0] + pre_rgb[1] + pre_rgb[2];\n    //   // let next_h = next.h;\n    //   // next_h = next_h < 30 ? (next_h+330) : next_h;\n    //   let next_rgb = hslToRgb(next.h, next.s, next.l);\n    //   next_rgb = next_rgb[0] + next_rgb[1] + next_rgb[2];\n    //   return next_rgb - pre_rgb;\n    // });\n    return [seeds, iteration_count];\n  }\n\n  classifyColor(color, classes) {\n    let len = classes.length;\n    let min = 10000;\n    let min_index;\n    while (len--) {\n      let distance =\n        Math.abs(classes[len].h - color.h) +\n        Math.abs(classes[len].s - color.s) +\n        Math.abs(classes[len].l - color.l);\n      if (distance < min) {\n        min = distance;\n        min_index = len;\n      }\n    }\n    color.category = min_index;\n  }\n}\n\nexport default PickerKMC;\n","/**\n * Method: Octree\n * Code in this file might be modified and commented based on original code by XadillaX\n * https://github.com/XadillaX/theme-color-test/blob/master/version3/octree.js\n */\n/**\n * Original code declaration:\n * ---------------------------------------\n * XadillaX created at 2014-09-12 10:20:54\n *\n * Copyright (c) 2014 Huaban.com, all rights\n * reserved\n */\n\nconst SIGBITS = 5;\nconst PSHIFT = 8 - SIGBITS;\n\n/**\n * red: Red channel accumulating value of current node. 该节点 R 通道累加值。\n * green: Green channel accumulating value. G 累加值。\n * blue: Blue channel accumulating value. B 累加值。\n * isLeaf: Is or is not leaf node. 表明该节点是否为叶子节点。\n * pixelCount: The count of color on current node. 在该节点的颜色一共插入了几次。\n * children: 八个子节点指针。\n * next: reducible 链表的下一个节点指针。\n */\nconst OctreeNode = function() {\n  this.red = 0;\n  this.green = 0;\n  this.blue = 0;\n  this.isLeaf = false;\n  this.pixelCount = 0;\n  this.children = new Array(8).fill(null);\n  this.next = null;\n};\n\nclass Octree {\n  constructor() {\n    this.root = new OctreeNode();\n    this.leafNum = 0;\n    this.reducible = new Array(7).fill(null);\n    this.colors = {};\n  }\n\n  createNode(parent, idx, level) {\n    const node = new OctreeNode();\n    if (level === 7) {\n      node.isLeaf = true;\n      this.leafNum++;\n    } else {\n      // ???\n      node.next = this.reducible[level];\n      this.reducible[level] = node;\n    }\n    return node;\n  }\n\n  /**\n   * Octree Insertion\n   * 八叉树插入\n   * @param {OctreeNode} node\n   * @param {Object} color\n   * @param {Number} level\n   */\n  addColor(node, color, level) {\n    if (node.isLeaf) {\n      node.pixelCount++;\n      node.red += color.r;\n      node.green += color.g;\n      node.blue += color.b;\n    } else {\n      // Octree encoding. 八叉树编码\n      // Since js stores number as float, so the bit operation is not very efficient.\n      // Therefore here use string\n      // 由于 js 内部都是以浮点型存储数值，所以位运算并没有那么高效\n      // 在此使用直接转换字符串的方式提取某一位的值\n      let str = \"\";\n      // decimal to binary with toString(2)\n      let r = color.r.toString(2);\n      let g = color.g.toString(2);\n      let b = color.b.toString(2);\n      // zero padding\n      while (r.length < 8) r = \"0\" + r;\n      while (g.length < 8) g = \"0\" + g;\n      while (b.length < 8) b = \"0\" + b;\n      // from 000 to 111\n      // str += r[level] + g[level] + b[level];\n      str += r[level];\n      str += g[level];\n      str += b[level];\n      const idx = parseInt(str, 2);\n      // new color -> new node\n      if (node.children[idx] === null) {\n        node.children[idx] = this.createNode(node, idx, level + 1);\n      }\n      this.addColor(node.children[idx], color, level + 1);\n    }\n  }\n\n  /**\n   * Octree Merge\n   * 八叉树归并\n   * 八叉树的数据结构保证了所有的兄弟节点肯定是在一个相近的颜色范围内\n   */\n  reduceTree() {\n    // reducible 的最深层为 reducible[6]\n    let lv = 6;\n    while (this.reducible[lv] === null) lv--;\n    // ???\n    const node = this.reducible[lv];\n    this.reducible[lv] = node.next;\n    let r = 0;\n    let g = 0;\n    let b = 0;\n    let count = 0;\n    for (let i = 0; i < 8; i++) {\n      if (node.children[i] === null) continue;\n      r += node.children[i].red;\n      g += node.children[i].green;\n      b += node.children[i].blue;\n      count += node.children[i].pixelCount;\n      this.leafNum--;\n    }\n\n    node.isLeaf = true;\n    node.red = r;\n    node.green = g;\n    node.blue = b;\n    node.pixelCount = count;\n    this.leafNum++;\n  }\n\n  buildOctree(pixels, maxColors) {\n    for (let i = 0; i < pixels.length; i++) {\n      // 添加颜色\n      this.addColor(this.root, pixels[i], 0);\n      // Color Merge. 色彩归并：合并叶子结点\n      while (this.leafNum > maxColors) this.reduceTree();\n    }\n  }\n\n  getSwatch(imgData, maxColors = 256) {\n    let processInfo = {\n      time: 0\n    };\n    const start = performance.now();\n    const pixelArray = this._convertPixelsToRGB(imgData);\n    // const pixelArray = this._convertPixelsToRGBModified(imgData);\n    this.buildOctree(pixelArray, maxColors);\n    this.colorsStats(this.root);\n    let result = [];\n    for (var key in this.colors) {\n      result.push({ color: key, count: this.colors[key] });\n    }\n    result.sort((a, b) => b.count - a.count);\n    const end = performance.now();\n    processInfo.time = end - start;\n    return {\n      mc: result[0].color,\n      palette: result.slice(1).map(r => r.color),\n      info: processInfo\n    };\n  }\n\n  _convertPixelsToRGBModified(pixels, pixel_step) {\n    const width = pixels.width;\n    const height = pixels.height;\n    if (!pixel_step) {\n      pixel_step = width * height < 600 * 600 ? 1 : 2;\n    }\n    let keys = [],\n      colors = [];\n    let r, g, b;\n    for (let y = 0; y < height - 1; y += pixel_step) {\n      for (let x = 0; x < width - 1; x += pixel_step) {\n        const pindex = (y * width + x) * 4;\n        r = pixels.data[pindex];\n        g = pixels.data[pindex + 1];\n        b = pixels.data[pindex + 2];\n        const key = this._getColorIndex(r >> PSHIFT, g >> PSHIFT, b >> PSHIFT);\n        const cindex = keys.indexOf(key);\n        if (cindex < 0) {\n          keys.push(key);\n          colors.push({ r, g, b, key, count: 1 });\n        } else {\n          colors[cindex].count++;\n        }\n      }\n    }\n    return colors;\n  }\n\n  _convertPixelsToRGB(pixels, pixel_step) {\n    const width = pixels.width;\n    const height = pixels.height;\n    if (!pixel_step) {\n      pixel_step = width * height < 600 * 600 ? 1 : 2;\n    }\n    const rgbVals = [];\n    for (let y = 0; y < height; y += pixel_step) {\n      for (let x = 0; x < width; x += pixel_step) {\n        const index = (y * width + x) * 4;\n        rgbVals.push({\n          r: pixels.data[index],\n          g: pixels.data[index + 1],\n          b: pixels.data[index + 2]\n        });\n      }\n    }\n    return rgbVals;\n  }\n\n  _getColorIndex(r, g, b) {\n    return (r << (2 * SIGBITS)) + (g << SIGBITS) + b;\n  }\n\n  colorsStats(node) {\n    if (node.isLeaf) {\n      var r = parseInt(node.red / node.pixelCount).toString(16);\n      var g = parseInt(node.green / node.pixelCount).toString(16);\n      var b = parseInt(node.blue / node.pixelCount).toString(16);\n      if (r.length === 1) r = \"0\" + r;\n      if (g.length === 1) g = \"0\" + g;\n      if (b.length === 1) b = \"0\" + b;\n\n      var color = \"#\" + r + g + b;\n      if (this.colors[color]) this.colors[color] += node.pixelCount;\n      else this.colors[color] = node.pixelCount;\n\n      return;\n    }\n\n    for (var i = 0; i < 8; i++) {\n      if (null !== node.children[i]) {\n        this.colorsStats(node.children[i]);\n      }\n    }\n  }\n}\n\nexport default Octree;\n","/**\n * Method: Uniform/One-pass Quantization\n * A Simple implementation by Echo Yang\n * ------\n * License\n * -------\n * Copyright Echo Yang\n * Released under the MIT license\n * https://raw.githubusercontent.com/lokesh/color-thief/master/LICENSE\n *\n * @license\n */\n\nimport { _convertPixelsToRGB } from \"../../utils/imageUtils\";\n\nconst Node = function() {\n  this.children = [];\n  this.count = 0;\n};\n\n/**\n * r, g, b level decide how fine the color dividing\n * for example, r level and g level are 8, b level is 4\n * then the color space is dividing into 8 * 8 * 4 = 256 blocks\n */\nclass PickerUniform {\n  constructor(redLevel = 8, greenLevel = 8, blueLevel = 4) {\n    this.redLevel = redLevel;\n    this.greenLevel = greenLevel;\n    this.blueLevel = blueLevel;\n    this.bucket = {};\n  }\n\n  getSwatchOptimized(imgData, maxColor = 10) {\n    let processInfo = {\n      colors: 0,\n      time: 0\n    };\n    const start = performance.now();\n    const rgbArry = _convertPixelsToRGB(imgData);\n    this.categorize(rgbArry);\n    const swatch = this.quantizeWithMinHeap(maxColor);\n    const end = performance.now();\n    processInfo.time = end - start;\n    return {\n      mc: swatch[0],\n      palette: swatch.slice(1),\n      info: processInfo\n    };\n  }\n\n  getSwatch(imgData, maxColor = 10) {\n    let processInfo = {\n      colors: 0,\n      time: 0\n    };\n    const start = performance.now();\n    const rgbArry = _convertPixelsToRGB(imgData);\n    this.categorize(rgbArry);\n    const swatch = this.quantizeWithoutMinHeap(maxColor);\n    const end = performance.now();\n    processInfo.time = end - start;\n    return {\n      mc: swatch[0],\n      palette: swatch.slice(1),\n      info: processInfo\n    };\n  }\n\n  categorize(rgbArry) {\n    for (let i = 0; i < rgbArry.length; i++) {\n      const rd = 256 / this.redLevel;\n      const gd = 256 / this.greenLevel;\n      const bd = 256 / this.blueLevel;\n      const rp = Math.floor(rgbArry[i].r / rd);\n      const gp = Math.floor(rgbArry[i].g / gd);\n      const bp = Math.floor(rgbArry[i].b / bd);\n      const index = String(rp) + String(gp) + String(bp);\n      if (!this.bucket[index]) this.bucket[index] = new Node();\n      this.bucket[index].children.push(rgbArry[i]);\n      this.bucket[index].count++;\n    }\n    return this.bucket;\n  }\n\n  quantizeWithoutMinHeap(maxColor = 10) {\n    let bucketArray = [];\n    for (var node in this.bucket) {\n      bucketArray.push({ index: node, ...this.bucket[node] });\n    }\n    bucketArray.sort((b1, b2) => {\n      return b2.count - b1.count;\n    });\n    if (bucketArray.length > maxColor)\n      bucketArray = bucketArray.slice(0, maxColor);\n    const colors = bucketArray.map(node => {\n      const color = node.children.reduce(\n        (pre, cur) => {\n          pre.r += cur.r;\n          pre.g += cur.g;\n          pre.b += cur.b;\n          return pre;\n        },\n        { r: 0, g: 0, b: 0 }\n      );\n      color.r = Math.round(color.r / node.count);\n      color.g = Math.round(color.g / node.count);\n      color.b = Math.round(color.b / node.count);\n      return color;\n    });\n    return colors;\n  }\n\n  quantizeWithMinHeap(maxColor = 10) {\n    let bucketArray = [];\n    for (var node in this.bucket) {\n      if (bucketArray.length < maxColor) {\n        bucketArray.push({ index: node, ...this.bucket[node] });\n        buildMinHeap(bucketArray);\n      } else {\n        if (this.bucket[node].count > bucketArray[0].count) {\n          bucketArray[0] = this.bucket[node];\n          heapify(bucketArray, 0, bucketArray.length);\n        }\n      }\n    }\n    bucketArray.sort((b1, b2) => {\n      return b2.count - b1.count;\n    });\n    const colors = bucketArray.map(node => {\n      const color = node.children.reduce(\n        (pre, cur) => {\n          pre.r += cur.r;\n          pre.g += cur.g;\n          pre.b += cur.b;\n          return pre;\n        },\n        { r: 0, g: 0, b: 0 }\n      );\n      color.r = Math.round(color.r / node.count);\n      color.g = Math.round(color.g / node.count);\n      color.b = Math.round(color.b / node.count);\n      return color;\n    });\n    return colors;\n  }\n}\n\nfunction buildMinHeap(arr) {\n  for (let i = Math.floor(arr.length / 2); i >= 0; i--) {\n    heapify(arr, i, arr.length);\n  }\n  return arr;\n}\n\nfunction heapify(arr, index, heapSize) {\n  const left = index * 2 + 1;\n  const right = index * 2 + 2;\n  let min = index;\n  if (left < heapSize && arr[left][\"count\"] < arr[min][\"count\"]) {\n    min = left;\n  }\n  if (right < heapSize && arr[right][\"count\"] < arr[min][\"count\"]) {\n    min = right;\n  }\n  if (min !== index) {\n    [arr[index], arr[min]] = [arr[min], arr[index]];\n    heapify(arr, min, heapSize);\n  }\n}\nexport default PickerUniform;\n\n// const colors = [\n//   { r: 0, g: 1, b: 2, a: 0 },\n//   { r: 21, g: 11, b: 211, a: 0 },\n//   { r: 10, g: 221, b: 12, a: 0 },\n//   { r: 0, g: 111, b: 23, a: 0 },\n//   { r: 0, g: 12, b: 22, a: 0 },\n//   { r: 0, g: 1, b: 21, a: 0 },\n//   { r: 3, g: 1, b: 2, a: 0 },\n//   { r: 0, g: 5, b: 2, a: 0 },\n//   { r: 0, g: 11, b: 2, a: 0 },\n//   { r: 10, g: 1, b: 2, a: 0 },\n//   { r: 0, g: 1, b: 2, a: 0 },\n//   { r: 0, g: 11, b: 12, a: 0 },\n//   { r: 10, g: 12, b: 22, a: 0 },\n//   { r: 56, g: 77, b: 22, a: 0 },\n//   { r: 112, g: 112, b: 112, a: 0 },\n//   { r: 223, g: 12, b: 22, a: 0 },\n//   { r: 88, g: 12, b: 22, a: 0 },\n//   { r: 78, g: 12, b: 22, a: 0 },\n//   { r: 99, g: 12, b: 22, a: 0 }\n// ];\n\n// const test = new UniformQuan(8, 8, 4);\n// console.log(test.getSwatch(colors));\n","import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport Title from \"../../components/Title\";\nimport ImgUploadBox from \"../../components/ImgUploadBox\";\nimport Button from \"../../components/Button\";\nimport ColorBox from \"../../components/ColorBox\";\nimport InfoBox from \"../../components/InfoBox\";\nimport PickerMMCQ from \"../../components/PickerMMCQ\";\nimport PickerMCQ from \"../../components/PickerMCQ\";\nimport PickerKMC from \"../../components/PickerKMC\";\nimport PickerMKMC from \"../../components/PickerMKMC\";\nimport PickerOctree from \"../../components/PickerOctree\";\nimport PickerUniform from \"../../components/PickerUniform\";\nimport {\n  _getImageData,\n  _rgbArray2String,\n  _rgbObj2String\n} from \"../../utils/imageUtils\";\n\nconst CenterDiv = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 62rem;\n`;\n\nconst A = styled.a`\n  font-style: italic;\n  color: #05f;\n  :hover {\n    color: blue;\n  }\n`;\n\nconst FlexBox = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  margin: 2rem 0;\n`;\n\nfunction ColorPickerPage() {\n  const imgRef = useRef(null);\n  function _checkImgData(imgData) {\n    if (!imgData) {\n      try {\n        imgData = _getImageData(imgRef.current);\n      } catch {\n        window.alert(\"Please upload an image.\");\n      }\n    }\n    return imgData;\n  }\n  const [UQ, setUQ] = useState({ mc: [], palette: [], info: {} });\n  const [KMeans, setKMeans] = useState({ mc: [], palette: [], info: {} });\n  const [MKMeans, setMKMeans] = useState({ mc: [], palette: [], info: {} });\n  const [MMCQ, setMMCQ] = useState({ mc: [], palette: [], info: {} });\n  const [MCQ, setMCQ] = useState({ mc: [], palette: [], info: {} });\n  const [Octree, setOctree] = useState({ mc: [], palette: [], info: {} });\n\n  const PickerWithUQ = imgData => {\n    imgData = _checkImgData(imgData);\n    if (!imgData) return;\n    const UQ = new PickerUniform();\n    const maxColor = 8;\n    const swatch = UQ.getSwatch(imgData, maxColor);\n    const swatchOptimized = UQ.getSwatchOptimized(imgData, maxColor);\n    const mc = [_rgbObj2String(swatch.mc)];\n    const palette = swatch.palette.map(c => _rgbObj2String(c));\n    const info = [\n      { time: swatch.info.time, desp: \"without MinHeap\" },\n      { time: swatchOptimized.info.time, desp: \"with MinHeap\" }\n    ];\n    setUQ({ mc, palette, info });\n  };\n\n  const PickerWithKMeans = imgData => {\n    imgData = _checkImgData(imgData);\n    if (!imgData) return;\n    const KMC = new PickerKMC();\n    const k = 8;\n    const swatch = KMC.censusColors(imgData, k);\n    const mc = swatch.mc.map(c => _rgbObj2String(c));\n    const palette = swatch.palette;\n    const info = swatch.info;\n    setKMeans({ mc, palette, info });\n  };\n\n  const PickerWithMKMeans = imgData => {\n    imgData = _checkImgData(imgData);\n    if (!imgData) return;\n    const MKMC = new PickerMKMC();\n    const k = 8;\n    const swatch = MKMC.censusColors(imgData, k);\n    const mc = swatch.mc.map(c => _rgbObj2String(c));\n    const palette = swatch.palette;\n    const info = swatch.info;\n    setMKMeans({ mc, palette, info });\n  };\n\n  const PickerWithMMCQ = imgData => {\n    imgData = _checkImgData(imgData);\n    if (!imgData) return;\n    const MMCQ = new PickerMMCQ();\n    const swatch = MMCQ.getSwatch(imgData);\n    let mc = [`rgb(${swatch.mc.join(\",\")})`];\n    let palette = _rgbArray2String(swatch.palette);\n    const info = swatch.info;\n    setMMCQ({ mc, palette, info });\n  };\n\n  const PickerWithMCQ = imgData => {\n    imgData = _checkImgData(imgData);\n    if (!imgData) return;\n    const MCQ = new PickerMCQ();\n    const swatch = MCQ.getSwatch(imgData);\n    let mc = [_rgbObj2String(swatch.mc)];\n    let palette = swatch.palette.map(c => _rgbObj2String(c));\n    const info = swatch.info;\n    setMCQ({ mc, palette, info });\n  };\n\n  const PickerWithOctree = imgData => {\n    imgData = _checkImgData(imgData);\n    if (!imgData) return;\n    const Octree = new PickerOctree();\n    const swatch = Octree.getSwatch(imgData, 10);\n    let mc = [swatch.mc];\n    let palette = swatch.palette;\n    const info = swatch.info;\n    setOctree({ mc, palette, info });\n  };\n\n  const PickerWithAll = e => {\n    var imgData = _checkImgData();\n    if (!imgData) return;\n    try {\n      PickerWithUQ(imgData);\n      PickerWithKMeans(imgData);\n      PickerWithMCQ(imgData);\n      PickerWithMMCQ(imgData);\n      PickerWithMKMeans(imgData);\n      PickerWithOctree(imgData);\n    } catch {\n      window.alert(\n        \"There is something wrong in caculating, please try again later.\"\n      );\n    }\n  };\n\n  return (\n    <CenterDiv>\n      <Title\n        title=\"Many Methods To Get Color Palette of An Image\"\n        author=\"Echo Yang\"\n        created=\"Dec 01, 2019\"\n        updated=\"Dec 26, 2019\"\n      />\n      <ImgUploadBox ref={imgRef} />\n\n      <FlexBox>\n        <Button onClick={PickerWithAll} reverse={\"true\"}>\n          Try All Pickers\n        </Button>\n        <Button onClick={() => PickerWithUQ()}>Uniform</Button>\n        <Button onClick={() => PickerWithKMeans()}>K Means Cluster</Button>\n        <Button onClick={() => PickerWithMKMeans()}>\n          Modified K Means Cluster\n        </Button>\n        <Button onClick={() => PickerWithMCQ()}>Median Cut</Button>\n        <Button onClick={() => PickerWithMMCQ()}>Modified Median Cut</Button>\n        <Button onClick={() => PickerWithOctree()}>Octree</Button>\n      </FlexBox>\n\n      <div className=\"picker\">\n        <h2># Method: Uniform/One-pass Quantization</h2>\n        <p>Simple implementation by Echo Yang</p>\n        <ColorBox mainColor={UQ.mc} palette={UQ.palette} />\n        {/* <InfoBox>Process time: {UQ.info.time ? UQ.info.time : 0}ms</InfoBox> */}\n        <InfoBox>\n          Process time:{\" \"}\n          {UQ.info.length > 0\n            ? `${UQ.info[0].time} ms (${UQ.info[0].desp}), ${UQ.info[1].time} ms (${UQ.info[1].desp})`\n            : 0}\n        </InfoBox>\n      </div>\n\n      <div className=\"picker\">\n        <h2># Method: K Means Cluster</h2>\n        <p>\n          From{\" \"}\n          <A className=\"link\" href=\"https://github.com/woshizja/colorful-color\">\n            Colorful Color\n          </A>{\" \"}\n          by woshizja\n        </p>\n        <ColorBox mainColor={KMeans.mc} palette={KMeans.palette} />\n        <InfoBox>\n          Process time: {KMeans.info.time ? KMeans.info.time : 0}ms\n        </InfoBox>\n      </div>\n\n      <div className=\"picker\">\n        <h2># Method: Modified K Means Cluster</h2>\n        <p>\n          Modification is based on{\" \"}\n          <A className=\"link\" href=\"https://github.com/woshizja/colorful-color\">\n            Colorful Color\n          </A>{\" \"}\n          by Echo\n        </p>\n        <ColorBox mainColor={MKMeans.mc} palette={MKMeans.palette} />\n        <InfoBox>\n          Process time: {MKMeans.info.time ? MKMeans.info.time : 0}ms\n        </InfoBox>\n      </div>\n\n      <div className=\"picker\">\n        <h2># Method: Median Cut</h2>\n        <p>\n          From{\" \"}\n          <A\n            className=\"link\"\n            href=\"https://github.com/GoogleChromeLabs/sample-media-pwa\"\n          >\n            Sample Media (VOD) App\n          </A>{\" \"}\n          by GoogleChromeLabs\n        </p>\n        <ColorBox mainColor={MCQ.mc} palette={MCQ.palette} />\n        <InfoBox>Process time: {MCQ.info.time ? MCQ.info.time : 0}ms</InfoBox>\n      </div>\n\n      <div className=\"picker\">\n        <h2># Method: Modified Median Cut</h2>\n        <p>\n          From{\" \"}\n          <A className=\"link\" href=\"https://github.com/lokesh/color-thief\">\n            Color Thief\n          </A>{\" \"}\n          by <A href=\"https://lokeshdhakar.com/\">Lokesh Dhakar</A>. Here is a{\" \"}\n          <A href=\"https://lokeshdhakar.com/projects/color-thief/\">\n            {\" \"}\n            Demo Link\n          </A>\n        </p>\n        <ColorBox mainColor={MMCQ.mc} palette={MMCQ.palette} />\n        <InfoBox>Process time: {MMCQ.info.time ? MMCQ.info.time : 0}ms</InfoBox>\n      </div>\n\n      <div className=\"picker\">\n        <h2># Method: Octree</h2>\n        <p>\n          From{\" \"}\n          <A\n            className=\"link\"\n            href=\"https://github.com/XadillaX/theme-color-test/blob/master/version3/octree.js\"\n          >\n            Octree 主题色提取\n          </A>{\" \"}\n          by XadillaX\n        </p>\n        <ColorBox mainColor={Octree.mc} palette={Octree.palette} />\n        <InfoBox>\n          Process time: {Octree.info.time ? Octree.info.time : 0}ms\n        </InfoBox>\n      </div>\n\n      <style jsx=\"true\">\n        {`\n          .picker {\n            margin-bottom: 3rem;\n          }\n        `}\n      </style>\n    </CenterDiv>\n  );\n}\n\nexport default ColorPickerPage;\n","import React from \"react\";\nimport Title from \"../../components/Title\";\nimport styled from \"styled-components\";\n\nconst Article = styled.div`\n  max-width: 870px;\n  margin: 0 auto;\n`;\nconst Body = styled.div`\n  margin: 0 20px;\n`;\n\nconst Section = styled.h2`\n  text-align: center;\n  margin-top: 40px;\n  margin-bottom: 30px;\n`;\n\nconst Para = styled.div`\n  line-height: 1.5rem;\n`;\n\nfunction AboutPage(props) {\n  return (\n    <Article>\n      <Title\n        title=\"About This\"\n        author=\"Echo Yang\"\n        created=\"Dec 26, 2019\"\n        updated=\"null\"\n      />\n\n      <Section>Introduction</Section>\n      <Para>\n        <p>\n          There are three motivations behind this example. First, I am a\n          colour-lover. Second, I am a science/tech/facts-lover. Third, I love\n          to combine Technologies and Art.\n        </p>\n        <p>\n          Even though there have been already hunderds of implementations on\n          this topic, my examples here are based on these wonderful\n          implementations and they are my approaches to learn about how to get\n          main colors from a picture.\n        </p>\n        <p>\n          \"<u>Get color palette from an image</u>\" in scientific terminology, is\n          called <b>Color Quantization</b>. Color quantization is the process of\n          reducing an image with thousands or millions of colors to one with\n          fewer. The trick is to balance speed, cpu and memory requirements\n          while minimizing the perceptual loss in output quality. (rosetta) More\n          info can be found on wikipedia. Various algorithms can be found on\n          rosettacode.org.\n        </p>\n      </Para>\n      <Section>One-pass Quantization</Section>\n      <Para>\n        <p>\n          The most intuitive and simplest way is a fixed color partitioning. The\n          term, one-pass quantization, is from Leptonica, some also call it{\" \"}\n          <b>Uniform Quantization</b>.\n        </p>\n        <p>\n          In my implemenation, I simply divide r/g/b color channels into larger\n          segmentations (default is r8/g8/b4, means partition color space into\n          256 blocks). Then categorise every pixel into the blocks, finally\n          sorting blocks by count, take the first several (maxColor) as result.\n        </p>\n      </Para>\n    </Article>\n  );\n}\n\nexport default AboutPage;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useRouteMatch\n} from \"react-router-dom\";\nimport MyHeader from \"./components/MyHeader\";\nimport \"./App.css\";\nimport ColorPickerPage from \"./containers/ColorPickerPage\";\nimport AboutPage from \"./containers/AboutPage\";\n\nfunction App() {\n  let match = useRouteMatch();\n  return (\n    <Router>\n      <>\n        <MyHeader />\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path={`${match.url}/about`}>\n            <AboutPage />\n          </Route>\n          <Route path={`${match.url}/`}>\n            <ColorPickerPage />\n          </Route>\n        </Switch>\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import \"./store/test\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}